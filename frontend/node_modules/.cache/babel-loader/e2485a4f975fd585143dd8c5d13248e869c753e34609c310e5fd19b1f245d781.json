{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = () => {\n  _s();\n  const history = useHistory();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // get form data\n    const username = event.target.elements.username.value;\n    const rating = event.target.elements.rating.value;\n    const service = event.target.elements.service.value;\n    // submit review\n    await submitReview(username, rating, service);\n    // clear form inputs\n    event.target.reset();\n    // redirect to home page\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n_c = ReviewForm;\nconst submitReview = async (username, rating, service) => {\n  const url = 'http://your-api-url/reviews';\n  const data = {\n    username,\n    rating,\n    service\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to submit review');\n    }\n  } catch (error) {\n    console.error(error);\n    // handle error\n  }\n};\n\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useHistory","jsxDEV","_jsxDEV","ReviewForm","_s","history","handleSubmit","event","preventDefault","username","target","elements","value","rating","service","submitReview","reset","push","onSubmit","children","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","url","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","$RefreshReg$"],"sources":["C:/Users/cheta/Desktop/frontend/src/screens/ReviewForm.js"],"sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ReviewForm = () => {\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // get form data\r\n    const username = event.target.elements.username.value;\r\n    const rating = event.target.elements.rating.value;\r\n    const service = event.target.elements.service.value;\r\n    // submit review\r\n    await submitReview(username, rating, service);\r\n    // clear form inputs\r\n    event.target.reset();\r\n    // redirect to home page\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* form inputs */}\r\n      <button type=\"submit\">Submit Review</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst submitReview = async (username, rating, service) => {\r\n  const url = 'http://your-api-url/reviews';\r\n  const data = { username, rating, service };\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to submit review');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    // handle error\r\n  }\r\n};\r\n\r\nexport default ReviewForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGL,UAAU,EAAE;EAE5B,MAAMM,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAACC,QAAQ,CAACF,QAAQ,CAACG,KAAK;IACrD,MAAMC,MAAM,GAAGN,KAAK,CAACG,MAAM,CAACC,QAAQ,CAACE,MAAM,CAACD,KAAK;IACjD,MAAME,OAAO,GAAGP,KAAK,CAACG,MAAM,CAACC,QAAQ,CAACG,OAAO,CAACF,KAAK;IACnD;IACA,MAAMG,YAAY,CAACN,QAAQ,EAAEI,MAAM,EAAEC,OAAO,CAAC;IAC7C;IACAP,KAAK,CAACG,MAAM,CAACM,KAAK,EAAE;IACpB;IACAX,OAAO,CAACY,IAAI,CAAC,GAAG,CAAC;EACnB,CAAC;EAED,oBACEf,OAAA;IAAMgB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,eAE3BjB,OAAA;MAAQkB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAS;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvC;AAEX,CAAC;AAACpB,EAAA,CAvBID,UAAU;EAAA,QACEH,UAAU;AAAA;AAAAyB,EAAA,GADtBtB,UAAU;AAyBhB,MAAMY,YAAY,GAAG,MAAAA,CAAON,QAAQ,EAAEI,MAAM,EAAEC,OAAO,KAAK;EACxD,MAAMY,GAAG,GAAG,6BAA6B;EACzC,MAAMC,IAAI,GAAG;IAAElB,QAAQ;IAAEI,MAAM;IAAEC;EAAQ,CAAC;EAC1C,IAAI;IACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAChCI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB;EACF;AACF,CAAC;;AAED,eAAelC,UAAU;AAAC,IAAAsB,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}