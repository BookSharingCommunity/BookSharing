{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\MessageScreen.js\",\n  _s = $RefreshSig$();\nimport './MessageScreen.css';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageScreen = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const {\n    userInfo\n  } = useContext(Store);\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (input.trim() === '' || receiver.trim() === '') return;\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/message', {\n        receiver,\n        content: input\n      });\n\n      // Update the messages state with the new message\n      setMessages([...messages, {\n        id: data.id,\n        sender: userInfo.username,\n        content: input\n      }]);\n\n      // Clear the input field\n      setInput('');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n  useEffect(() => {\n    // Fetch messages from your API or database here\n    // For now, let's use some hardcoded messages\n    setMessages([{\n      id: 1,\n      sender: 'user1',\n      content: 'Hello, I am interested in buying your book.'\n    }, {\n      id: 2,\n      sender: 'user2',\n      content: 'Hi, sure! The book is still available.'\n    }]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messageScreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageScreen__header\",\n      children: \"Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageScreen__messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `messageScreen__message ${message.sender === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username) ? 'sent' : 'received'}`,\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"messageScreen__inputForm\",\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"messageScreen__input\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"messageScreen__receiver\",\n        value: receiver,\n        onChange: e => setReceiver(e.target.value),\n        placeholder: \"Enter the username of the person you're messaging...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"messageScreen__sendButton\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageScreen__reviewSection\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageScreen__reviewHeader\",\n        children: \"Leave a Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"review\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageScreen, \"hGKxU1fmcjUoBEpBuLV4pw2bHT0=\");\n_c = MessageScreen;\nexport default MessageScreen;\nvar _c;\n$RefreshReg$(_c, \"MessageScreen\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Helmet","Form","Button","Store","toast","getError","axios","jsxDEV","_jsxDEV","MessageScreen","_s","messages","setMessages","input","setInput","receiver","setReceiver","userInfo","submitHandler","e","preventDefault","trim","data","put","content","id","sender","username","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","onSubmit","type","value","onChange","target","placeholder","Group","controlId","Label","Control","as","rows","variant","_c","$RefreshReg$"],"sources":["C:/Users/cheta/Desktop/frontend/src/screens/MessageScreen.js"],"sourcesContent":["import './MessageScreen.css';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { Store } from '../Store';\nimport { toast } from 'react-toastify';\nimport { getError } from '../utils';\nimport axios from 'axios';\n\nconst MessageScreen = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [receiver, setReceiver] = useState('');\n  const { userInfo } = useContext(Store);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (input.trim() === '' || receiver.trim() === '') return;\n\n    try {\n      const { data } = await axios.put('/api/users/message', {\n        receiver,\n        content: input,\n      });\n\n      // Update the messages state with the new message\n      setMessages([\n        ...messages,\n        { id: data.id, sender: userInfo.username, content: input },\n      ]);\n\n      // Clear the input field\n      setInput('');\n    } catch (err) {\n      toast.error(getError(err));\n    }\n  };\n\n  useEffect(() => {\n    // Fetch messages from your API or database here\n    // For now, let's use some hardcoded messages\n    setMessages([\n      { id: 1, sender: 'user1', content: 'Hello, I am interested in buying your book.' },\n      { id: 2, sender: 'user2', content: 'Hi, sure! The book is still available.' },\n    ]);\n  }, []);\n\n  return (\n    <div className=\"messageScreen\">\n      <div className=\"messageScreen__header\">Messages</div>\n      <div className=\"messageScreen__messages\">\n        {messages.map((message) => (\n          <div className={`messageScreen__message ${message.sender === userInfo?.username ? 'sent' : 'received'}`}>\n\n            {message.content}\n          </div>\n        ))}\n      </div>\n      <form className=\"messageScreen__inputForm\" onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          className=\"messageScreen__input\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message...\"\n        />\n        <input\n          type=\"text\"\n          className=\"messageScreen__receiver\"\n          value={receiver}\n          onChange={(e) => setReceiver(e.target.value)}\n          placeholder=\"Enter the username of the person you're messaging...\"\n        />\n        <button type=\"submit\" className=\"messageScreen__sendButton\">\n          Send\n        </button>\n      </form>\n      <div className=\"messageScreen__reviewSection\">\n        <div className=\"messageScreen__reviewHeader\">Leave a Review</div>\n        <Form>\n          <Form.Group controlId=\"rating\">\n            <Form.Label>Rating:</Form.Label>\n            <Form.Control as=\"select\">\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group controlId=\"review\">\n            <Form.Label>Review:</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit Review\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default MessageScreen\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}