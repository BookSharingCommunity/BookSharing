{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReviewForm = () => {\n  _s();\n  const history = useNavigate();\n  const [service, setService] = useState('');\n  const [rating, setRating] = useState(0);\n  const [review, setReview] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    // submit review\n    await submitReview(service, rating, review);\n    // clear form inputs\n    setService('');\n    setRating(0);\n    setReview('');\n    // redirect to home page\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"service\",\n      children: \"Reviewing as:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"service\",\n      name: \"service\",\n      value: service,\n      onChange: e => setService(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"buyer\",\n        children: \"Buyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"seller\",\n        children: \"Seller\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rating\",\n      children: \"Rating:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"rating\",\n      name: \"rating\",\n      value: rating,\n      min: \"0\",\n      max: \"5\",\n      step: \"0.1\",\n      onChange: e => setRating(parseFloat(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"review\",\n      children: \"Review:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"review\",\n      name: \"review\",\n      value: review,\n      onChange: e => setReview(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(ReviewForm, \"nTWrTlUdNkIJOFByryTGeXPLqH8=\", false, function () {\n  return [useNavigate];\n});\n_c = ReviewForm;\nconst submitReview = async (service, rating, review) => {\n  const url = 'http://your-api-url/reviews';\n  const data = {\n    service,\n    rating,\n    review\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to submit review');\n    }\n  } catch (error) {\n    console.error(error);\n    // handle error\n  }\n};\n\nexport default ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ReviewForm","_s","history","service","setService","rating","setRating","review","setReview","handleSubmit","event","preventDefault","submitReview","push","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","name","value","onChange","e","target","type","min","max","step","parseFloat","_c","url","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","error","console","$RefreshReg$"],"sources":["C:/Users/cheta/Desktop/frontend/src/screens/ReviewForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst ReviewForm = () => {\r\n  const history = useNavigate();\r\n\r\n  const [service, setService] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [review, setReview] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    // submit review\r\n    await submitReview(service, rating, review);\r\n    // clear form inputs\r\n    setService('');\r\n    setRating(0);\r\n    setReview('');\r\n    // redirect to home page\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"service\">Reviewing as:</label>\r\n      <select id=\"service\" name=\"service\" value={service} onChange={(e) => setService(e.target.value)}>\r\n        <option value=\"buyer\">Buyer</option>\r\n        <option value=\"seller\">Seller</option>\r\n      </select>\r\n      <br />\r\n      <label htmlFor=\"rating\">Rating:</label>\r\n      <input type=\"number\" id=\"rating\" name=\"rating\" value={rating} min=\"0\" max=\"5\" step=\"0.1\" onChange={(e) => setRating(parseFloat(e.target.value))} />\r\n      <br />\r\n      <label htmlFor=\"review\">Review:</label>\r\n      <textarea id=\"review\" name=\"review\" value={review} onChange={(e) => setReview(e.target.value)} />\r\n      <br />\r\n      <button type=\"submit\">Submit Review</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst submitReview = async (service, rating, review) => {\r\n  const url = 'http://your-api-url/reviews';\r\n  const data = { service, rating, review };\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(data),\r\n    });\r\n    if (!response.ok) {\r\n      throw new Error('Failed to submit review');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    // handle error\r\n  }\r\n};\r\n\r\nexport default ReviewForm;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGL,WAAW,EAAE;EAE7B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMa,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IACtB;IACA,MAAMC,YAAY,CAACT,OAAO,EAAEE,MAAM,EAAEE,MAAM,CAAC;IAC3C;IACAH,UAAU,CAAC,EAAE,CAAC;IACdE,SAAS,CAAC,CAAC,CAAC;IACZE,SAAS,CAAC,EAAE,CAAC;IACb;IACAN,OAAO,CAACW,IAAI,CAAC,GAAG,CAAC;EACnB,CAAC;EAED,oBACEd,OAAA;IAAMe,QAAQ,EAAEL,YAAa;IAAAM,QAAA,gBAC3BhB,OAAA;MAAOiB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eAC9CrB,OAAA;MAAQsB,EAAE,EAAC,SAAS;MAACC,IAAI,EAAC,SAAS;MAACC,KAAK,EAAEpB,OAAQ;MAACqB,QAAQ,EAAGC,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAR,QAAA,gBAC9FhB,OAAA;QAAQwB,KAAK,EAAC,OAAO;QAAAR,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACpCrB,OAAA;QAAQwB,KAAK,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/B,eACTrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNrB,OAAA;MAAOiB,OAAO,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvCrB,OAAA;MAAO4B,IAAI,EAAC,QAAQ;MAACN,EAAE,EAAC,QAAQ;MAACC,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAElB,MAAO;MAACuB,GAAG,EAAC,GAAG;MAACC,GAAG,EAAC,GAAG;MAACC,IAAI,EAAC,KAAK;MAACN,QAAQ,EAAGC,CAAC,IAAKnB,SAAS,CAACyB,UAAU,CAACN,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACnJrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNrB,OAAA;MAAOiB,OAAO,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACvCrB,OAAA;MAAUsB,EAAE,EAAC,QAAQ;MAACC,IAAI,EAAC,QAAQ;MAACC,KAAK,EAAEhB,MAAO;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,SAAS,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACjGrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACNrB,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAZ,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvC;AAEX,CAAC;AAACnB,EAAA,CApCID,UAAU;EAAA,QACEH,WAAW;AAAA;AAAAmC,EAAA,GADvBhC,UAAU;AAsChB,MAAMY,YAAY,GAAG,MAAAA,CAAOT,OAAO,EAAEE,MAAM,EAAEE,MAAM,KAAK;EACtD,MAAM0B,GAAG,GAAG,6BAA6B;EACzC,MAAMC,IAAI,GAAG;IAAE/B,OAAO;IAAEE,MAAM;IAAEE;EAAO,CAAC;EACxC,IAAI;IACF,MAAM4B,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;MAChCI,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB;EACF;AACF,CAAC;;AAED,eAAe5C,UAAU;AAAC,IAAAgC,EAAA;AAAAc,YAAA,CAAAd,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}