{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cheta\\\\Desktop\\\\frontend\\\\src\\\\screens\\\\MessageScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageScreen() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [content, setContent] = useState('');\n  const [threadId, setThreadId] = useState('');\n  const sendMessage = () => {\n    const data = {\n      username,\n      content,\n      threadId\n    };\n    axios.post('/api/new-message', data).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Username\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Content\",\n      value: content,\n      onChange: e => setContent(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Thread ID\",\n      value: threadId,\n      onChange: e => setThreadId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageScreen, \"QfG4yRb+K2Ro1448WZgl5fxlrCg=\");\n_c = MessageScreen;\nexport default MessageScreen;\nvar _c;\n$RefreshReg$(_c, \"MessageScreen\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","MessageScreen","_s","username","setUsername","content","setContent","threadId","setThreadId","sendMessage","data","post","then","response","console","log","catch","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/cheta/Desktop/frontend/src/screens/MessageScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction MessageScreen() {\n  const [username, setUsername] = useState('');\n  const [content, setContent] = useState('');\n  const [threadId, setThreadId] = useState('');\n\n  const sendMessage = () => {\n    const data = {\n      username,\n      content,\n      threadId\n    };\n\n    axios.post('/api/new-message', data)\n      .then(response => {\n        console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Username\" value={username} onChange={e => setUsername(e.target.value)} />\n      <input type=\"text\" placeholder=\"Content\" value={content} onChange={e => setContent(e.target.value)} />\n      <input type=\"text\" placeholder=\"Thread ID\" value={threadId} onChange={e => setThreadId(e.target.value)} />\n      <button onClick={sendMessage}>Send Message</button>\n    </div>\n  );\n}\n\nexport default MessageScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,IAAI,GAAG;MACXP,QAAQ;MACRE,OAAO;MACPE;IACF,CAAC;IAEDT,KAAK,CAACa,IAAI,CAAC,kBAAkB,EAAED,IAAI,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAElB,QAAS;MAACmB,QAAQ,EAAEC,CAAC,IAAInB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzG5B,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,SAAS;MAACC,KAAK,EAAEhB,OAAQ;MAACiB,QAAQ,EAAEC,CAAC,IAAIjB,UAAU,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtG5B,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACC,KAAK,EAAEd,QAAS;MAACe,QAAQ,EAAEC,CAAC,IAAIf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1G5B,OAAA;MAAQ6B,OAAO,EAAEpB,WAAY;MAAAS,QAAA,EAAC;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC/C;AAEV;AAAC1B,EAAA,CA7BQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA+BtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}